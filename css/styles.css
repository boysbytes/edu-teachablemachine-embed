:root {
  color-scheme: light;
  --bg: #f4f6fb;
  --bg-alt: #ffffff;
  --panel: #ffffff;
  --panel-light: #ffffff;
  --text: #0f1724;
  --text-dark: #0b1220;
  --accent: #3d7bfd;
  --accent-dark: #2752ad;
  --success: #2ea043;
  --border: rgba(15, 23, 42, 0.06);
  --shadow: 0 20px 40px rgba(15, 23, 42, 0.06);
  --radius: 14px;
  --transition: 0.2s ease;
  font-family: "Inter", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  min-height: 100vh;
  background: var(--bg);
  color: var(--text);
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 32px 16px 48px;
}

.page-header,
.page-footer {
  max-width: 1080px;
  width: 100%;
  text-align: center;
}

.page-header h1 {
  font-size: clamp(2rem, 3vw, 2.8rem);
  margin-bottom: 0.5rem;
}

.tagline {
  margin: 0;
  opacity: 0.75;
  font-weight: 500;
}

.page-footer {
  margin-top: 48px;
  font-size: 0.9rem;
  opacity: 0.7;
}

.page-footer a {
  color: var(--accent);
}

.app {
  display: grid;
  gap: 24px;
  width: 100%;
  max-width: 1080px;
  margin-top: 24px;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.panel {
  background-color: var(--panel);
  backdrop-filter: blur(22px);
  border-radius: var(--radius);
  padding: 24px;
  box-shadow: var(--shadow);
  border: 1px solid var(--border);
  display: flex;
  flex-direction: column;
  gap: 18px;
}

body .panel {
  background-color: var(--panel);
  border-color: var(--border);
  box-shadow: var(--shadow);
}

/* Make the model URL panel span full width of the grid */
.model-panel {
  grid-column: 1 / -1;
}

.panel-heading h2 {
  margin: 0;
  font-size: 1.4rem;
}

.panel-heading p {
  margin: 4px 0 0;
  opacity: 0.6;
  font-size: 0.95rem;
}

.button-row {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
}

.btn {
  background-color: transparent;
  border: 1px solid rgba(240, 246, 252, 0.3);
  color: inherit;
  font-size: 1rem;
  font-weight: 600;
  padding: 0.75rem 1.25rem;
  border-radius: 9999px;
  cursor: pointer;
  transition: transform var(--transition), box-shadow var(--transition), background-color var(--transition);
}

.btn.primary {
  background: linear-gradient(135deg, #3d7bfd, #2752ad);
  border-color: transparent;
  color: #fff;
  box-shadow: 0 14px 30px rgba(61, 123, 253, 0.35);
}

.btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 18px 36px rgba(61, 123, 253, 0.26);
}

.btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: none;
}

.upload-row {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.model-url-row {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-bottom: 1rem;
}

.model-url-label {
  font-weight: 600;
  font-size: 0.95rem;
}

.model-url-row input[type="url"] {
  padding: 0.75rem;
  border: 1px solid rgba(240, 246, 252, 0.3);
  border-radius: var(--radius);
  background-color: var(--bg-alt);
  color: inherit;
  font-size: 1rem;
  transition: border-color var(--transition), box-shadow var(--transition);
}

.model-url-row input[type="url"]:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(61, 123, 253, 0.1);
}

.model-url-row .btn.secondary {
  align-self: flex-start;
  background: linear-gradient(135deg, #6b7280, #4b5563);
  border-color: transparent;
  color: #fff;
  box-shadow: 0 14px 30px rgba(107, 114, 128, 0.35);
}

.upload-label {
  font-weight: 600;
}

input[type="file"] {
  border: 1px dashed rgba(240, 246, 252, 0.35);
  padding: 12px;
  border-radius: 12px;
  background-color: rgba(240, 246, 252, 0.04);
  color: inherit;
  cursor: pointer;
}

input[type="file"]:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

.hint {
  font-size: 0.85rem;
  opacity: 0.6;
}

.mode-indicator {
  font-weight: 600;
  font-size: 0.95rem;
  color: rgba(15, 23, 42, 0.7);
}

.media-container {
  position: relative;
  width: 100%;
  aspect-ratio: 4 / 3;
  border-radius: var(--radius);
  overflow: hidden;
  border: 1px solid rgba(15, 23, 42, 0.06);
  background: rgba(15, 23, 42, 0.04);
  display: flex;
  align-items: center;
  justify-content: center;
}

.media-container img,
.media-container canvas {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* If an <img> has no src (empty), hide it so the placeholder/figcaption can be shown and centered */
.media-container img:not([src]),
.media-container img[src=""] {
  display: none;
}

/* For figure containers, stack image and caption vertically and center caption when there's no image */
figure.media-container {
  /* Use relative positioning so we can absolutely center the caption over the media area */
  position: relative;
  display: block;
  padding: 0;
}

/* Caption sits centered in the media box. We'll show it only when the image is absent. */
figure.media-container figcaption {
  position: absolute;
  inset: 0; /* top:0; right:0; bottom:0; left:0 */
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  color: rgba(240, 246, 252, 0.85);
  font-weight: 600;
  text-align: center;
  padding: 12px;
}

/* Only show the figcaption when there's no visible image */
figure.media-container img {
  display: block;
}

figure.media-container img:not([src]),
figure.media-container img[src=""] {
  display: none;
}

/* Show caption by default; JS will add `.has-image` to the wrapper when an image is present */
figure.media-container figcaption {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.12s ease, visibility 0.12s ease;
}

/* When JS marks the wrapper as having an image, hide the caption */
figure.media-container.has-image figcaption {
  visibility: hidden;
  opacity: 0;
}

.loading-indicator {
  display: flex;
  align-items: center;
  gap: 12px;
  font-weight: 600;
  opacity: 0.9;
}

.loading-indicator.hidden {
  display: none;
}

.spinner {
  width: 32px;
  height: 32px;
  border: 3px solid rgba(240, 246, 252, 0.12);
  border-top-color: var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.prediction-results {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.prediction-item {
  background: rgba(15, 23, 42, 0.02);
  border-radius: 12px;
  padding: 12px 16px;
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 6px 16px;
  border: 1px solid rgba(15, 23, 42, 0.04);
}

.top-prediction {
  border: 1px solid rgba(61, 123, 253, 0.18);
  box-shadow: 0 10px 20px rgba(61, 123, 253, 0.08);
}

.class-name {
  font-weight: 600;
  font-size: 1rem;
}

.probability {
  font-variant-numeric: tabular-nums;
  font-weight: 600;
}

.progress-bar {
  grid-column: 1 / -1;
  width: 100%;
  height: 9px;
  border-radius: 999px;
  background: rgba(240, 246, 252, 0.1);
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, rgba(61, 123, 253, 0.9), rgba(46, 160, 67, 0.9));
  transition: width 0.25s ease;
}

.empty-state {
  opacity: 0.6;
  font-style: italic;
}

.error-message {
  background: rgba(248, 81, 73, 0.14);
  border: 1px solid rgba(248, 81, 73, 0.4);
  border-radius: 12px;
  padding: 12px 16px;
  color: #ffb4b1;
}

.noscript-warning {
  background: rgba(248, 81, 73, 0.1);
  color: #f85149;
  padding: 12px 18px;
  border-radius: 12px;
  margin-bottom: 20px;
  font-weight: 600;
}

@media (max-width: 1024px) {
  .app {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (max-width: 720px) {
  body {
    padding: 24px 14px 36px;
  }

  .app {
    grid-template-columns: minmax(0, 1fr);
  }

  .panel {
    padding: 20px;
  }

  .prediction-item {
    grid-template-columns: 1fr;
  }

  .probability {
    justify-self: start;
  }
}
